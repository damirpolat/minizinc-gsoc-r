% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/evaluate.R
\name{eval_model}
\alias{eval_model}
\title{Evaluate models}
\usage{
eval_model(model, solver)
}
\arguments{
\item{model}{Object of class \code{\link{Model}}.}

\item{solver}{Object of class \code{\link{Solver}}.}
}
\value{
(`logical(1)`). `TRUE` if model is satisfiable and `FALSE` otherwise.
}
\description{
This function is used to evaluate a given model. The function modifies
variable objects and sets `value` fields with found solutions. It also
returns TRUE/FALSE depending on whether Minizinc found a satisfiable solution.
}
\examples{
# Create and solve a Minizinc model
var1 = Variable$new(type = "int", kind = "decision", domain = c(0, 10))
var2 = Variable$new(type = "int", kind = "decision", domain = c(0, 5))

constr = Constraint$new(constraint = "<", variables = c(var1, var2))

model = Model$new(decision = c(var1, var2), constraints = c(constr),
                  objective = "satisfy")
solver = Solver$new(name = "gecode")

# Example path
set_path("/home/damir/software/MiniZincIDE-2.4.2-bundle-linux/bin/minizinc")

res = eval_model(model, solver)
print(res)
}
