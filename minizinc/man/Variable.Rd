% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Variable.R
\name{Variable}
\alias{Variable}
\title{Variable Class}
\description{
Variable is a class to describe both parameter and decision variables.
It contains information that is needed to define a Minizinc variable, such as
type (int, bool, float, etc), kind (decision, parameter), value, domain.
}
\examples{
# Create a parameter variable
p = Variable$new(type = "int", kind = "parameter", value = 7)

p$kind
p$value
p$type
p$get_name()

# Manually set name of this variable. Default name used otherwise
p$set_name("parameter")

# Create a decision variable
d = Variable$new(type = "int", kind = "decision", domain = c(0, 10))
d$kind
d$type
d$domain
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{type}}{Type of variable (int, float, bool, etc.).}

\item{\code{kind}}{Kind of variable (parameter, decision).}

\item{\code{value}}{Value assigned to this variable. Value is only meaningful for
parameter variables.}

\item{\code{domain}}{Domain of valid values for a decision variable. Domain is only
meaningful for decision variables.}

\item{\code{name}}{Variable character name for internal use within Minizinc model.}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{name}}{Variable character name for internal use within Minizinc model.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Variable$new()}}
\item \href{#method-get_name}{\code{Variable$get_name()}}
\item \href{#method-set_name}{\code{Variable$set_name()}}
\item \href{#method-clone}{\code{Variable$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of Variable class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Variable$new(type, kind, value = NULL, domain = NULL, name = NULL)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_name"></a>}}
\if{latex}{\out{\hypertarget{method-get_name}{}}}
\subsection{Method \code{get_name()}}{
Returns variable name that is used in Minizinc model.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Variable$get_name()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_name"></a>}}
\if{latex}{\out{\hypertarget{method-set_name}{}}}
\subsection{Method \code{set_name()}}{
Set variable name
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Variable$set_name(name)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Variable$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
